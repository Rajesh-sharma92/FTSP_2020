# -*- coding: utf-8 -*-
"""
Created on Wed Mar 11 22:02:03 2020

@author: Rajesh
"""
Multithreading Introduction :-
---------------------------
Multitasking Means :- Executing several tasks simultaneously is known as Multitasking. 
------------------
Ex :- Best example for multitasking is a class student.
1. Listening class.
2. Writing running Notes.
3. Checking Mobile Activities.
4. sleeping.
5. Checking Environmental 
and etc. ...............

----------------------------------------------------------------------------------------
There are 2 types of Multitasking :- 
---------------------------------
1) Process Based Multitasking.
 
2) Thread Based Multitasking.
--------------------------------------------------------------------------------------------------------
1) Process Based Multitasking :- 
------------------------------
Executing several tasks simultaneously and Each task is a seperate Independant process.
Ex :-
Typing a Python program in editor.
Listening audio songs form same system.
Downloading new songs from the Internet.

NOTE :- Process based multitasking is best suitable for OS level.
--------------------------------------------------------------------------------------------------------------
2) Thread Based Multitasking :-
-----------------------------
Each task is an Indepedant part of the same program.

An indepedant part of a program.
A flow of execution is considered as a thread.
It is a python object.

NOTE :- For every thread Indepedant job is available.
Ex :- Gmail Application.
There are 3 person and all of them have opened a gmail account and using these 
services simultaneously. for all persons server has allocated a different thread like request.
NOTE :- Multithreading is very important for servers. If There is No multihreading 
then No servers are there. 

NOTE :- Every server is implemented by using Multithreading concepts.
NOTE :- At a time (default) 60 threads can be generated by servers and it can be 
Increased also as per user requirements.

NOTE :- It is used into Vedio Games , Multimedia Graphics , Animations,
Server Implementation.
----------------------------------------------------------------------------------------------------------------
NOTE :- Python provides support for multithreading and it has the in-built 
module for multithreading like threading.

Ex :- Main Thread in python.

import threading

print('Current Executing Thread :', threading.current_thread().getName())

************ Result ************
Current Executing Thread : MainThread
---------------------------------------------------------------------------------------------------------------

How many ways are there to define thread in python :-  3 Ways.
--------------------------------------------------
1) Creating a thread without using any class.
2) Creating a thread by extending Thread class.
3) Creating a thread without extending Thread class.
--------------------------------------------------------------------------------------------------------------------
1) Creating a thread without using any class :-
--------------------------------------------
import threading

from threading import *

NOTE :- We can use any one of them to call the threads. If we are using first one then 
we need to use the module names to call anything.

NOTE :- We are second approach for to import threading No need to use the module names.
NOTE :- Here is the 2nd approach is the recommaned to import threads.
-------------------------------------------------------------------------------------------
Ex :- 

from threading import *
def display():
    for i in range(10):
        print('Child Thread')
t = Thread(target = display) # Object creation for Thread class to execute the display().
t.start()

for i in range(10):
    print('Main Thread')
        
NOTE :- Here we can see that order is not important and both the thread are 
Indepedant. Thats means there is No depandancey on each other and both the 
threads will be executed simultaneously.
NOTE :- Here order is not there and both will be executing simultaneously.

NOTE :- Here we can see that MainThread is the responsible to create ChildThread.
NOTE :- MainThread is the responsible to start ChildThread and once ChildThread
started then ChildThread will be seperated and MainThread will be seperated.

NOTE :- There is No depandancy on both the threads like MainThread & ChildThread.
NOTE :- Both the Threads are having its own life cycles.

NOTE :- Here we can take any Baby example like once the baby grown up then 
baby will not depadent on their parents and will not be associated with them.

NOTE :- If tomorrow Parent thread ends also No problem at all, ChildThread will 
be executing because it is Indepedant and No depandencey.

NOTE :- In the above example we can see that.
threading = Module Name
Thread() = Thread class and its predefined class present in threading module.
and It is used to create an object.

NOTE :- The above is the way to define a Thread but by using Functional programming.
-------------------------------------------------------------------------------------------------------------
How to get the Name of the Threads :-
----------------------------------

from threading import *
def display():
    print('Child Thread Name :', current_thread().getName())

t = Thread(target=display)

t.start()

print('Main Thread Name :', current_thread().getName())    

*********** Result **************
Child Thread Name : Thread-7
Main Thread Name : MainThread

Child Thread Name : Thread-21
Main Thread Name : MainThread
----------------------------------------------------------------------------------------------------------------------------

2) Creating a thread by extending Thread class :-
----------------------------------------------

from threading import *
class MyThread(Thread):
    def run(self):
        for i in range(10):
            print('Child Thread')
         
t = MyThread()
t.start()

for i in range(10):
    print('Main Thread')
            
NOTE :- Here we can see that run() method is predefined which is present inside Thread class.
NOTE :- We can change run() method by any other method.
NOTE :- The above is the way to define a Thread but by using OOPs Concept.
NOTE :- Whenever we are calling the start() method then Internally it will be 
calling run() method only.

Question :- How many threads we can create in python programs ?.
Answer :- We can create any no. of threads in python but always there will be
one Thread in python program and its called as MainThread.


    
            
        
    
    




















































